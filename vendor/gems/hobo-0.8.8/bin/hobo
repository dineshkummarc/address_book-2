#!/usr/bin/env ruby

require 'fileutils'
Signal.trap("INT") { puts; exit }

hobo_src = File.join(File.dirname(__FILE__), "../hobo_files/plugin")

USAGE = "USAGE: hobo <options> <app-path>

Options:
  --user-model <model-name-or-false>
  --db-create                        # Run rake db:create:all
  --hobo-src <path to hobo src>
  -d | --database <database>         # e.g. mysql, sqlite
  -r | --rails <version>             # rails version to use
  -n | --no-rails                    # don't run 'rails'.  Assumes app-path=='.'
"


### Nasty stuff needed for Windows :-( ###
require 'rbconfig'

if Config::CONFIG["arch"] =~ /win32/
  require "win32/registry"
  def system(command)
    win = Win32API.new("crtdll", "system", ['P'], 'L').Call(command)
  end
end
### end nasty stuff ###


def command(*s)
  com = s.join(' ')
  puts "--> #{com}"
  ok = system(com)
  exit(1) unless ok
end

user_model  = "user"
create_db   = false
run_rails   = true

puts ARGV

while true
  case arg_name = ARGV.shift
  when "--user-model"
    arg = ARGV.shift
    user_model = arg == "false" ? nil : arg
  when "--db-create"
    create_db = true
  when "--hobo-src"
    hobo_src = "../" + ARGV.shift
  when "-d", "--database"
    database_type = ARGV.shift
  when "-r", "--rails"
    rails_version = ARGV.shift
  when "-n", "--no-rails"
    run_rails = false
  when "--help"
    puts USAGE
    exit
  else
    app_path = arg_name
    break
  end
end

if run_rails==false && app_path.nil?
  app_path = '.'
end

if !ARGV.empty? || app_path.nil?
  puts USAGE
  exit 1
end

if run_rails
  puts "\nGenerating Rails app...\n"
  opts = []
  if rails_version
    opts << "_#{rails_version}_"
#  else
#    if `rails -v`.split[1].split(".").slice(0,2)!=['2', '3']
#      puts "Rails 2.3 required!"
#      exit 2
#    end
  end
  opts << "-d #{database_type}" if database_type
  system("rails #{opts * ' '} #{app_path}")
end

Dir.chdir(app_path) do
  gen = "ruby #{File.join('script', 'generate')}"
  plugin = "ruby #{File.join('script', 'plugin')}"

  FileUtils.touch("public/stylesheets/application.css")

  puts "\nInitialising Hobo...\n"
  command(gen, "hobo --add-gem --add-routes")

  puts "\nInstalling Hobo Rapid and default theme...\n"
  command("#{gen} hobo_rapid --import-tags")

  if user_model
    puts "\nCreating #{user_model} model and controller...\n"
    command("#{gen} hobo_user_model #{user_model}")
    command("#{gen} hobo_user_controller #{user_model}")
  end

  puts "\nCreating standard pages...\n"
  command("#{gen} hobo_front_controller front --delete-index --add-routes")

  if create_db
    puts "\nCreating databases"
    command("rake db:create:all")
  end
end

