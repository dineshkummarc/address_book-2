<!-- Support for navigation links, account navigation (log in, out etc.) and pagination navigation. -->

<!-- General purpose navigation bar. Renders a `<ul class="navigation">`. This tag is intended to be used in conunction with `<nav-item>`. The main feature of this pair of tags (over, say, just using a plain `<ul>` list), is that it's easy to have a 'current' CSS class added to the appropriate nav item (so you can highlight the page/section the user is)
  
The main navigation in the default hobo app is implemented with `<navigation>` but this tag is also appropriate for any sub-navigation.
  
### Attributes

 - `current` - the textual content of the nav item that should have the 'current' CSS class added (see example) 
 
### Example

The normal usage is to define your own navigation tag that calls `<navigation>`.

    <def tag="sub-nav">
      <navigation merge>
        <nav-item>Red</nav-item>
        <nav-item>Green</nav-item>
        <nav-item>Blue</nav-item>
      </navigation>
    </def>

Then in your pages you can call the tag like this

 - On the 'red' page: `<sub-nav current="red"/>`
 - On the 'green' page:  `<sub-nav current="green"/>`
 - and so on.
 
   -->
<def tag="navigation" attrs="current">
  <ul class="navigation" merge-attrs>
    <set-scoped current-navigation="&current">
      <do param="default"/>
    </set-scoped>
  </ul>
</def>


<!-- Renders a single item in a `<navigation>` menu. See [`<navigation`>](/api_tag_defs/navigation). -->
<def tag="nav-item" attrs="name">
  <% body = parameters.default 
     body = h(this.to_s) if body.blank?
     name ||= body.gsub(/<.*?>/, '').strip
     -%>
  <li class="#{'current' if (c = scope.current_navigation) && c.downcase == name.downcase}"
      merge-attrs="&attributes - (attrs_for(:a)+['target'])">
    <a merge-attrs="&attributes & (attrs_for(:a)+['target'])"><%= body %></a>
  </li>
</def>


<!-- Account Navigation (log in / out / signup)
  
When logged in, this renders:

 - "Logged in as ..."
 - Link to account page
 - Log out link

When not logged in, renders:

 - Log in link
 - Sign up link
 
This is a simple tag - just look at the source if you need to know more detail.

  -->
<def tag="account-nav">
  <do with="&current_user">
    <ul class="navigation account-nav" param>
      <li if="&RAILS_ENV == 'development'"><dev-user-changer/></li>
      <if test="&logged_in?">
        <li class='nav-item' param="logged-in-as"><a to="&current_user">Logged in as <name/></a></li>
        <li class='nav-item' param="account"><a action="account">Account</a></li>
        <li class='nav-item' param="log-out"><a href="&logout_url">Log out</a></li>
      </if>
      <else>
        <li class='nav-item' param="log-in"><a href="&login_url">Log in</a></li>
        <li if="&signup_url" class="nav-item" param="sign-up"><a href="&signup_url">Sign up</a></li>
      </else>
    </ul>
  </do>
</def>


<!--- A simple wrapper around the `will_paginate` helper. All options to `will_paginate` are available as attributes -->
<def tag="page-nav">
  <%= will_paginate this, attributes.symbolize_keys.reverse_merge(:inner_window => 2, :prev_label => "&laquo; Prev") %>
</def>
